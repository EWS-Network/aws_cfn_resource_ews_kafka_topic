---
# Docker compose expansion to deploy fake kafka in AWS ECS

services:
  zookeeper:
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    x-network:
      UseCloudmap: True
      Ingress:
        Services:
          - Name: broker
        Myself: True
    deploy:
      resources:
        reservations:
          cpus: 2.0
          memory: 4GB

  broker:
    image: public.ecr.aws/ews-network/confluentinc/cp-server:6.1.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    deploy:
      resources:
        reservations:
          cpus: 2.0
          memory: 4GB
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper.cluster.internal:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker.cluster.internal:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry.cluster.internal:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker.cluster.internal:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    x-network:
      UseCloudmap: True
      Ingress:
        Services:
          - Name: schemaregistry
          - Name: controlcenter
        Myself: True

  schema-registry:
    image: public.ecr.aws/ews-network/confluentinc/cp-schema-registry:6.1.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    deploy:
      resources:
        reservations:
          cpus: 2.0
          memory: 4GB
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker.cluster.internal:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    x-network:
      UseCloudmap: True
      Ingress:
        Services:
          - Name: controlcenter
          - Name: broker
        Myself: True


  control-center:
    image: public.ecr.aws/ews-network/confluentinc/cp-enterprise-control-center:6.1.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    deploy:
      resources:
        reservations:
          cpus: 2.0
          memory: 4GB
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker.cluster.internal:9092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry.cluster.internal:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    x-network:
      UseCloudmap: True
      Ingress:
        ExtSources:
          - Name: VPC
            IPv4: 100.64.72.0/24
        Myself: True

x-dns:
  PrivateNamespace:
    Name: cluster.internal

x-elbv2:
  controlcenter:
    Properties:
      Scheme: internet-facing
      Type: application
    MacroParameters:
      Ingress:
        ExtSources:
          - IPv4: 0.0.0.0/0
            Name: Any
            Description: Any
    Listeners:
      - Port: 80
        Protocol: HTTP
        Targets:
          - name: control-center:control-center
    Services:
      - name: control-center:control-center
        port: 9021
        protocol: HTTP
        healthcheck: 9021:HTTP:4:2:15:5:/:200
